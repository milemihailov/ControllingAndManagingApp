@using MachineControlHub.Motion
@using System.Text.RegularExpressions
@inject Data.PrintingService printingService
@inject PrinterManagerService printerManager


@if (printerManager.ActivePrinter.SerialConnection != null && printerManager.ActivePrinter.CurrentPrintJob.IsPrinting)
{
    
    <MudProgressLinear Color="Color.Warning" Striped="true" Size="Size.Large" Value="printingService.Progress" Class="pb-9">
        <MudText Typo="Typo.subtitle1" Color="Color.Surface">
            <b>Printing: @printingService.Progress %</b>
        </MudText>
    </MudProgressLinear>
}

<MudAlert ContentAlignment="HorizontalAlignment.Center" NoIcon="true" Severity="Severity.Success">
    <MudText Typo="Typo.h6" Color="Color.Primary">@printerManager.Notification</MudText>
</MudAlert>
@*
    <MudAlert ContentAlignment="HorizontalAlignment.Center" Severity="@(!PortManager.IsBusy ? Severity.Success : Severity.Warning)" Variant="Variant.Text">
        @if (PortManager.IsBusy)
        {
            <MudProgressLinear Striped="true" Color="Color.Primary" Indeterminate="true" Size="Size.Small" />
        }
        @(new MarkupString(!PortManager.IsBusy ? $"Printer is ready" : "Printer Busy... Please wait"))
    </MudAlert> *@

@*     <MudProgressLinear Color="Color.Warning" Striped="true" Size="Size.Large" Value="printingService.progress" Class="pb-9">
        <MudText Typo="Typo.subtitle1" Color="Color.Surface">
            <b>Printing: @printingService.progress %</b>
        </MudText>
    </MudProgressLinear> *@

@code {

    protected override void OnInitialized()
    {
        printerManager.InputReceived += OnMessageReceived;
        printerManager.ActivePrinterChanged += OnPrinterChanged;
    }

    public void OnMessageReceived(string message)
    {
        printingService.UpdatePrintProgress(message, printerManager.ActivePrinter);
        InvokeAsync(StateHasChanged);
    }

    public void OnPrinterChanged(object sender, EventArgs e)
    {
        printingService.Progress = 0;
    }


    public void Dispose()
    {
        printerManager.InputReceived -= OnMessageReceived;
    }
}