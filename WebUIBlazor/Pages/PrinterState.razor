@using MachineControlHub.Motion
@using System.Text.RegularExpressions
@inject Data.PrintingService printingService
@inject PrinterManagerService printerManager


@if (printerManager.ActivePrinter.SerialConnection != null && printerManager.ActivePrinter.CurrentPrintJob.IsPrinting)
{

    <MudProgressLinear Color="Color.Warning" Striped="true" Size="Size.Large" Value="printerManager.ActivePrinter.CurrentPrintJob.PrintProgress" Class="pb-9">
        <MudText Typo="Typo.subtitle1" Color="Color.Surface">
            <b>Printing: @printerManager.ActivePrinter.CurrentPrintJob.PrintProgress %</b>
        </MudText>
    </MudProgressLinear>
}

<MudAlert ContentAlignment="HorizontalAlignment.Center" NoIcon="true" Severity="Severity.Success">
    <MudText Typo="Typo.h6" Color="Color.Primary">@printerManager.Notification</MudText>
</MudAlert>

@code {

    protected override void OnInitialized()
    {
        printerManager.InputReceived += OnMessageReceived;
        printerManager.ActivePrinterChanged += OnPrinterChanged;
    }

    public void OnMessageReceived(string message)
    {
        printingService.UpdatePrintProgress(message, printerManager.ActivePrinter);
        InvokeAsync(StateHasChanged);
    }

    public void OnPrinterChanged(object sender, EventArgs e)
    {
        printerManager.ActivePrinter.CurrentPrintJob.PrintProgress = 0;
    }


    public void Dispose()
    {
        printerManager.InputReceived -= OnMessageReceived;
    }
}